"""Dropping join tables to fix types

Revision ID: 4a388bde3be8
Revises: e48eb8bcacb5
Create Date: 2025-04-21 23:14:53.503342

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '4a388bde3be8'
down_revision: Union[str, None] = 'e48eb8bcacb5'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('requirement_parent')
    op.drop_table('form_parent')
    op.drop_table('deadline_parent')
    sa.Enum('MUNICIPALITY', 'ELECTION', 'REQUIREMENT', name='deadlinetype').drop(op.get_bind())
    sa.Enum('MUNICIPALITY', 'ELECTION', name='requirementtype').drop(op.get_bind())
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    sa.Enum('MUNICIPALITY', 'ELECTION', name='requirementtype').create(op.get_bind())
    sa.Enum('MUNICIPALITY', 'ELECTION', 'REQUIREMENT', name='deadlinetype').create(op.get_bind())
    op.create_table('deadline_parent',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('deadline_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('parent_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('parent_type', postgresql.ENUM('MUNICIPALITY', 'ELECTION', 'REQUIREMENT', name='deadlinetype', create_type=False), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['deadline_id'], ['deadline.id'], name='deadline_parent_deadline_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='deadline_parent_pkey')
    )
    op.create_table('form_parent',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('form_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('parent_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('parent_type', postgresql.ENUM('MUNICIPALITY', 'ELECTION', 'REQUIREMENT', name='deadlinetype', create_type=False), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['form_id'], ['form.id'], name='form_parent_form_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='form_parent_pkey')
    )
    op.create_table('requirement_parent',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('requirement_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('parent_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('parent_type', postgresql.ENUM('MUNICIPALITY', 'ELECTION', name='requirementtype', create_type=False), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['requirement_id'], ['requirement.id'], name='requirement_parent_requirement_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='requirement_parent_pkey')
    )
    # ### end Alembic commands ###
