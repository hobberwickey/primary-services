"""Adding in polymorphic tables

Revision ID: e48eb8bcacb5
Revises: 9f99dbab4419
Create Date: 2025-04-21 00:33:46.414927

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'e48eb8bcacb5'
down_revision: Union[str, None] = '9f99dbab4419'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('deadline_parents')
    op.drop_table('requirement_parents')
    op.drop_table('election_requirement')
    op.drop_table('form_parents')
    op.drop_table('election_deadline')
    op.drop_table('election_form')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('election_form',
    sa.Column('election_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('form_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['election_id'], ['election.id'], name='election_form_election_id_fkey'),
    sa.ForeignKeyConstraint(['form_id'], ['form.id'], name='election_form_form_id_fkey'),
    sa.UniqueConstraint('election_id', 'form_id', name='election_form_idx')
    )
    op.create_table('election_deadline',
    sa.Column('election_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('deadline_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['deadline_id'], ['deadline.id'], name='election_deadline_deadline_id_fkey'),
    sa.ForeignKeyConstraint(['election_id'], ['election.id'], name='election_deadline_election_id_fkey'),
    sa.UniqueConstraint('election_id', 'deadline_id', name='election_deadline_idx')
    )
    op.create_table('form_parents',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('parent_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('parent_type', postgresql.ENUM('MUNICIPALITY', 'ELECTION', 'REQUIREMENT', name='deadlinetype', create_type=False), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='form_parents_pkey')
    )
    op.create_table('election_requirement',
    sa.Column('election_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('requirement_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['election_id'], ['election.id'], name='election_requirement_election_id_fkey'),
    sa.ForeignKeyConstraint(['requirement_id'], ['requirement.id'], name='election_requirement_requirement_id_fkey'),
    sa.UniqueConstraint('election_id', 'requirement_id', name='election_requirement_idx')
    )
    op.create_table('requirement_parents',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('parent_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('parent_type', postgresql.ENUM('MUNICIPALITY', 'ELECTION', name='requirementtype', create_type=False), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='requirement_parents_pkey')
    )
    op.create_table('deadline_parents',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('parent_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('parent_type', postgresql.ENUM('MUNICIPALITY', 'ELECTION', 'REQUIREMENT', name='deadlinetype', create_type=False), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='deadline_parents_pkey')
    )
    # ### end Alembic commands ###
