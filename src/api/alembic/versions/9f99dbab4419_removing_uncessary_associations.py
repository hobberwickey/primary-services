"""Removing uncessary associations

Revision ID: 9f99dbab4419
Revises: 3120ca102a3c
Create Date: 2025-04-20 19:50:36.254560

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '9f99dbab4419'
down_revision: Union[str, None] = '3120ca102a3c'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint('candidate_municipality_id_fkey', 'candidate', type_='foreignkey')
    op.drop_column('candidate', 'municipality_id')
    op.drop_constraint('deadline_municipality_id_fkey', 'deadline', type_='foreignkey')
    op.drop_column('deadline', 'municipality_id')
    op.drop_constraint('election_municipality_id_fkey', 'election', type_='foreignkey')
    op.drop_column('election', 'municipality_id')
    op.drop_index('election_deadline_idx', table_name='election_deadline')
    op.create_unique_constraint('election_deadline_idx', 'election_deadline', ['election_id', 'deadline_id'])
    op.drop_index('election_form_idx', table_name='election_form')
    op.create_unique_constraint('election_form_idx', 'election_form', ['election_id', 'form_id'])
    op.drop_index('election_requirement_idx', table_name='election_requirement')
    op.create_unique_constraint('election_requirement_idx', 'election_requirement', ['election_id', 'requirement_id'])
    op.drop_constraint('form_municipality_id_fkey', 'form', type_='foreignkey')
    op.drop_column('form', 'municipality_id')
    op.drop_constraint('official_municipality_id_fkey', 'official', type_='foreignkey')
    op.drop_column('official', 'municipality_id')
    op.drop_constraint('term_office_id_fkey', 'term', type_='foreignkey')
    op.drop_column('term', 'office_id')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('term', sa.Column('office_id', sa.INTEGER(), autoincrement=False, nullable=False))
    op.create_foreign_key('term_office_id_fkey', 'term', 'office', ['office_id'], ['id'])
    op.add_column('official', sa.Column('municipality_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.create_foreign_key('official_municipality_id_fkey', 'official', 'municipality', ['municipality_id'], ['id'])
    op.add_column('form', sa.Column('municipality_id', sa.INTEGER(), autoincrement=False, nullable=False))
    op.create_foreign_key('form_municipality_id_fkey', 'form', 'municipality', ['municipality_id'], ['id'])
    op.drop_constraint('election_requirement_idx', 'election_requirement', type_='unique')
    op.create_index('election_requirement_idx', 'election_requirement', ['election_id', 'requirement_id'], unique=True)
    op.drop_constraint('election_form_idx', 'election_form', type_='unique')
    op.create_index('election_form_idx', 'election_form', ['election_id', 'form_id'], unique=True)
    op.drop_constraint('election_deadline_idx', 'election_deadline', type_='unique')
    op.create_index('election_deadline_idx', 'election_deadline', ['election_id', 'deadline_id'], unique=True)
    op.add_column('election', sa.Column('municipality_id', sa.INTEGER(), autoincrement=False, nullable=False))
    op.create_foreign_key('election_municipality_id_fkey', 'election', 'municipality', ['municipality_id'], ['id'])
    op.add_column('deadline', sa.Column('municipality_id', sa.INTEGER(), autoincrement=False, nullable=False))
    op.create_foreign_key('deadline_municipality_id_fkey', 'deadline', 'municipality', ['municipality_id'], ['id'])
    op.add_column('candidate', sa.Column('municipality_id', sa.INTEGER(), autoincrement=False, nullable=False))
    op.create_foreign_key('candidate_municipality_id_fkey', 'candidate', 'municipality', ['municipality_id'], ['id'])
    # ### end Alembic commands ###
